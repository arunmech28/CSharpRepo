<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="PC380387" ignored="0" name="Default test" tests="2" failures="0" timestamp="11 Dec 2017 10:53:03 GMT" time="12.579" errors="0">
  <testcase name="@AfterMethod isElementPresent" time="0.0" classname="com.mckesson.suite.InpatientRegistration.InpatientRegistrationTest">
    <failure type="org.testng.TestNGException" message="
Can inject only one of &amp;lt;ITestContext, XmlTest, Method, Object[], ITestResult&amp;gt; into a @AfterMethod annotated isElementPresent.
For more information on native dependency injection please refer to http://testng.org/doc/documentation-main.html#native-dependency-injection">
      <![CDATA[org.testng.TestNGException: 
Can inject only one of <ITestContext, XmlTest, Method, Object[], ITestResult> into a @AfterMethod annotated isElementPresent.
For more information on native dependency injection please refer to http://testng.org/doc/documentation-main.html#native-dependency-injection
	at org.testng.internal.Parameters.checkParameterTypes(Parameters.java:334)
	at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:274)
	at org.testng.internal.Parameters.createParameters(Parameters.java:562)
	at org.testng.internal.Parameters.createConfigurationParameters(Parameters.java:150)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:206)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:731)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:877)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1201)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:776)
	at org.testng.TestRunner.run(TestRunner.java:634)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:425)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:420)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:385)
	at org.testng.SuiteRunner.run(SuiteRunner.java:334)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1318)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1243)
	at org.testng.TestNG.runSuites(TestNG.java:1161)
	at org.testng.TestNG.run(TestNG.java:1129)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @AfterMethod isElementPresent -->
  <testcase name="@AfterMethod reportDataSetResult" time="0.0" classname="com.mckesson.suite.InpatientRegistration.InpatientRegistrationTest">
    <skipped/>
  </testcase> <!-- @AfterMethod reportDataSetResult -->
  <testcase name="@AfterMethod isElementPresent" time="0.0" classname="com.mckesson.suite.InpatientRegistration.InpatientRegistrationTest">
    <skipped/>
  </testcase> <!-- @AfterMethod isElementPresent -->
  <testcase name="@AfterMethod reportDataSetResult" time="0.0" classname="com.mckesson.suite.InpatientRegistration.InpatientRegistrationTest">
    <skipped/>
  </testcase> <!-- @AfterMethod reportDataSetResult -->
  <testcase name="@AfterTest reportTestResult" time="0.0" classname="com.mckesson.suite.InpatientRegistration.InpatientRegistrationTest">
    <skipped/>
  </testcase> <!-- @AfterTest reportTestResult -->
  <testcase name="OutpatientRegistration" time="12.553" classname="com.mckesson.suite.InpatientRegistration.InpatientRegistrationTest"/>
  <testcase name="OutpatientRegistration" time="0.001" classname="com.mckesson.suite.InpatientRegistration.InpatientRegistrationTest">
    <skipped/>
  </testcase> <!-- OutpatientRegistration -->
</testsuite> <!-- Default test -->
